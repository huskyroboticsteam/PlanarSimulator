FUNCTIONALITY:
  Animate the simulator graphically (and plot odom/smoothed trajectories)
  Implement some kind of *efficient* graph-based optimizer
  Read a paper to verify that this is actually how smoothing-based SLAM is implemented
    (in particular, understand why the Hessian of the potential gives the "variance")

REFACTORING:
  Reduce signedness casts
  Clean up world.{h,cpp} data structures
  Reduce code duplication between 1D_slam and 2D_slam
